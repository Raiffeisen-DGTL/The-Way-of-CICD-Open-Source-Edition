
.get_maven_wrapper:
  script:
    - |
      if [[ "$BUILD_TYPE" == "maven" ]]
      then
        if [[ "$USE_REPO_WRAPPER" == "true" && -d ".mvn/wrapper" && -f "mvnw" ]]
        then
          echo "MAVEN WRAPPER: repo"
        else
          echo "MAVEN WRAPPER: qa-pipeline-template"
          rm -rf .mvn mvnw
          mv wrappers/maven/mvn .mvn
          mv wrappers/maven/mvnw .
          export MVNW_USERNAME="$REGISTRY_USER"
          export MVNW_PASSWORD="$REGISTRY_PASSWORD"
        fi
        chmod +x mvnw
      fi

.get_gradle_wrapper:
  script:
    - |
      if [[ "$BUILD_TYPE" == "gradle" ]]
      then
        if [[ "$USE_REPO_WRAPPER" == "true" && -d "gradle/wrapper" && -f "gradlew" ]]
        then
          echo "GRADLE WRAPPER: repo"
        else
          echo "GRADLE WRAPPER: qa-pipeline-template"
          rm -rf gradle gradlew
          mv wrappers/gradle/gradle .
          mv wrappers/gradle/gradlew .
          export WRAPPER_PARAMS="-Dgradle.wrapperUser=$REGISTRY_USER -Dgradle.wrapperPassword=$REGISTRY_PASSWORD"
        fi
        chmod +x gradlew
      fi

.load_vault:
  script:
    - |
      if [[ -f "vault.env" ]]
      then
        source vault.env
      else
        echo "The vault variables are not defined"
      fi

.test_env_prepare:
  image: alpine/git:2.40.1
  script:
    - |
      PIPELINE_FOLDER=
      if [[ -z "${PIPELINE_REPO}" ]]
      then
        echo "ERROR: PIPELINE_REPO variable is not set"
        exit 1
      else
        echo "PIPELINE_REPO: $PIPELINE_REPO"
        PIPELINE_FULL_REPO=$(echo "$PIPELINE_REPO" | sed -e "s#https://#https://gitlab-ci-token:${CI_JOB_TOKEN}@#")
        PIPELINE_FOLDER=$(echo "$PIPELINE_REPO" | sed -e 's#https://YOUR.GITLAB.URL/##' -e 's#.git##' | awk -F '/' '{print $NF}')
        if [[ -z "${PIPELINE_BRANCH}" ]]
        then
          git clone $PIPELINE_FULL_REPO
        else
          echo "PIPELINE_BRANCH: $PIPELINE_BRANCH"
          git clone -b $PIPELINE_BRANCH $PIPELINE_FULL_REPO
        fi
      fi
    - |
      if [[ $MATTERMOST_BOT_TOKEN ]]
      then
        mv $PIPELINE_FOLDER/$PIPELINE_CUSTOM_FOLDER/test_utils/ .
      fi
    - |
      if [[ "$USE_REPO_WRAPPER" != "true" ]]
      then
        mv $PIPELINE_FOLDER/$PIPELINE_CUSTOM_FOLDER/wrappers/ .
      fi
    - !reference [ .get_maven_wrapper, script ]
    - !reference [ .get_gradle_wrapper, script ]
  artifacts:
    paths:
      - test_utils/
      - wrappers/
  rules:
    #    job starts if mattermost token defined or your onw wrapper used
    - if: $MATTERMOST_BOT_TOKEN || $USE_REPO_WRAPPER != "true"

.extract_kafka_cache:
  script:
    - |
      if [[ ! -z "$KAFKA_CACHE_DIR" ]]
      then
        echo "copy files for kafka"
        cp -a $KAFKA_CACHE_DIR/. ./
      fi