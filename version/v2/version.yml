.version_git:
  stage: version
  image: gittools/gitversion:6.0.0-alpine.3.17-7.0
  variables:
    GIT_STRATEGY: clone
    GIT_DEPTH: 0
  before_script:
    - |
      if [[ ! -f "GitVersion.yml" ]]
      then
        cat <<EOF > GitVersion.yml
        mode: Mainline
        increment: Inherit
        tag-prefix: '[vV]?'
        minor-version-bump-message: 'branch\s?''(feature|minor).*into\s?''(master|main)'''
        patch-version-bump-message: 'branch\s?''(fix|bugfix|hotfix|patch).*into\s?''(master|main)'''
        no-bump-message: 'from\s(none|skip|doc)'
        legacy-semver-padding: 0
        build-metadata-padding: 0
        commits-since-version-source-padding: 0
        commit-message-incrementing: Disabled
        branches: {}
        ignore:
          sha: []
      EOF
      fi
  script:
    - |
      if [ -z "$CI_COMMIT_TAG" ]
      then
          if [[ -f "majorVersion" ]]
          then
            MAJOR_VERSION=$(cat majorVersion | grep MAJOR_VERSION | cut -d '=' -f 2)
          else
            MAJOR_VERSION=0
          fi
      fi
    - |
      if [ -z "$CI_COMMIT_TAG" ]
      then
          git fetch --all
          if (( ${MAJOR_VERSION} > $(gitversion /showvariable Major) ))
          then
              VERSION=${MAJOR_VERSION}.0.0
          else
              VERSION=$(gitversion /showvariable MajorMinorPatch)
          fi
      else
          VERSION=${CI_COMMIT_TAG}
      fi
    - |
      if [ -z "$CI_COMMIT_TAG" ]
      then
          if [ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]
          then
            echo "VERSION=${VERSION}" > version.env
          else
            echo "VERSION=$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA" > version.env
          fi
      else
          echo "VERSION=${VERSION}" > version.env
      fi
      sed -e 's/=/: /' version.env
  artifacts:
    reports:
      dotenv:
        - ./version.env
